{"version":3,"sources":["components/quote.jsx","App.js","reportWebVitals.js","index.js"],"names":["Quote","handleClick","getQuote","fetch","then","res","json","data","setState","text","content","author","state","this","tweetHref","replace","className","aria-hidden","id","style","maxWidth","href","onClick","Component","App","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA4EeA,E,kDAzEb,aAAe,IAAD,8BACZ,gBAWFC,YAAc,WACZ,EAAKC,YAbO,EA6DdA,SAAW,WACTC,MAAM,kCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZC,KAAMF,EAAKG,QACXC,OAAQJ,EAAKI,aAjEnB,EAAKC,MAAQ,CACXH,KAAM,GACNE,OAAQ,IAJE,E,gEASZE,KAAKX,a,+BAQL,IAAMY,EAAS,gDACbD,KAAKD,MAAMH,KADE,qBAEFI,KAAKD,MAAMD,OAAOI,QAAQ,KAAM,MAC7C,MAAwB,KAApBF,KAAKD,MAAMH,KACN,mBAAGO,UAAU,sBAAsBC,cAAY,SAGpD,qBAAKD,UAAU,qCAAf,SACE,qBAAKE,GAAG,YAAYF,UAAU,OAAOG,MAAO,CAAEC,SAAU,SAAxD,SACE,sBAAKJ,UAAU,YAAf,UACE,6BAAYA,UAAU,wBAAtB,UACE,oBAAGE,GAAG,OAAOF,UAAU,YAAvB,UACE,mBAAGA,UAAU,wBAAwBC,cAAY,SAChDJ,KAAKD,MAAMH,KACZ,mBAAGO,UAAU,yBAAyBC,cAAY,YAEpD,wBAAQC,GAAG,SAASF,UAAU,oBAA9B,SACGH,KAAKD,MAAMD,YAGhB,sBAAKK,UAAU,qCAAf,UACE,oBACEE,GAAG,cACHF,UAAU,4CACVK,KAAMP,EAHR,UAKE,mBAAGE,UAAU,gBAAgBC,cAAY,SACzC,sBAAMD,UAAU,OAAhB,sBAEF,wBACEE,GAAG,YACHI,QAAST,KAAKZ,YACde,UAAU,uBAHZ,qC,GA/CIO,aCWLC,MAVf,WAEE,OADAC,QAAQC,IAAI,iBAEV,sBAAKV,UAAU,MAAf,UACE,oBAAIA,UAAU,yBAAd,kCACA,cAAC,EAAD,QCISW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b67ac1f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Quote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      author: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getQuote();\n  }\n\n  handleClick = () => {\n    this.getQuote();\n  };\n\n  render() {\n    const tweetHref = `https://twitter.com/intent/tweet?text=${\n      this.state.text\n    }&hashtags=${this.state.author.replace(/ /g, \"_\")}`;\n    if (this.state.text === \"\") {\n      return <i className=\"fa fa-spinner fa-4x\" aria-hidden=\"true\"></i>;\n    } else {\n      return (\n        <div className=\"d-flex justify-content-center mt-4\">\n          <div id=\"quote-box\" className=\"card\" style={{ maxWidth: \"60rem\" }}>\n            <div className=\"card-body\">\n              <blockquote className=\"blockquote text-right\">\n                <p id=\"text\" className=\"lead mb-0\">\n                  <i className=\"fa fa-quote-left mr-2\" aria-hidden=\"true\"></i>\n                  {this.state.text}\n                  <i className=\"fa fa-quote-right ml-2\" aria-hidden=\"true\"></i>\n                </p>\n                <footer id=\"author\" className=\"blockquote-footer\">\n                  {this.state.author}\n                </footer>\n              </blockquote>\n              <div className=\"row d-flex justify-content-between\">\n                <a\n                  id=\"tweet-quote\"\n                  className=\"btn btn-primary ml-3 twitter-share-button\"\n                  href={tweetHref}\n                >\n                  <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                  <span className=\"ml-2\">tweet</span>\n                </a>\n                <button\n                  id=\"new-quote\"\n                  onClick={this.handleClick}\n                  className=\"btn btn-success mr-3\"\n                >\n                  new quote\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  getQuote = () => {\n    fetch(\"https://api.quotable.io/random\")\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          text: data.content,\n          author: data.author,\n        });\n      });\n  };\n}\n\nexport default Quote;\n","import './App.css';\nimport Quote from './components/quote';\n\nfunction App() {\n  console.log('app rendering');\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-success display-4\">Random quote machine</h1>\n      <Quote />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}